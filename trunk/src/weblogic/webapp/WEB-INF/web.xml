<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.1"
         xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd">
    <!-- Overriding system level defaults is a decent usage of XML -->
    <context-param>
        <param-name>javax.faces.PROJECT_STAGE</param-name>
        <param-value>Development</param-value>
    </context-param>

    <!-- XML is still typical for third party framework configuration -->
    <context-param>
        <param-name>primefaces.THEME</param-name>
        <param-value>ui-lightness</param-value>
    </context-param>

    <servlet>
        <servlet-name>Faces Servlet</servlet-name>
        <servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>Faces Servlet</servlet-name>
        <url-pattern>*.xhtml</url-pattern>
    </servlet-mapping>

    <session-config>
        <session-timeout>12</session-timeout>
    </session-config>

    <welcome-file-list>
        <welcome-file>index.xhtml</welcome-file>
        <welcome-file>index.html</welcome-file>
    </welcome-file-list>

    <error-page>
         <exception-type>javax.faces.application.ViewExpiredException</exception-type>
         <location>/expired.xhtml</location>
    </error-page>
    
    <error-page>
        <exception-type>javax.servlet.ServletException</exception-type>
        <location>/error.xhtml</location>
    </error-page>

    <error-page>
        <exception-type>java.lang.Throwable</exception-type>
        <location>/error.xhtml</location>
    </error-page>    

    <error-page>
        <error-code>404</error-code>
        <location>/error_404.xhtml</location>
    </error-page>

    <!-- Application level resource dependencies like JMS queues and data
    sources are still good candidates for XML -->
    <!-- Defining these at the application server level instead of here
    Can be more operations friendly and help make deployment even faster. -->
    <!--data-source>
        <name>java:app/jdbc/CargoTrackerDatabase</name>
        <class-name>org.apache.derby.jdbc.EmbeddedDriver</class-name>
        <url>jdbc:derby:${webapp.databaseTempDir}/cargo-tracker-database;create=true</url>
    </data-source-->
    
        <data-source>
        <name>java:app/jdbc/CargoTrackerDatabase</name>
        <class-name>org.apache.derby.jdbc.ClientXADataSource</class-name>
        <server-name>localhost</server-name>
        <port-number>1527</port-number>
        <database-name>CargoTrackerDatabase</database-name>
        <user>app</user>
        <password>app</password>
        <property>
            <name>create</name>
            <value>true</value>
        </property>
        <property>
            <name>weblogic.TestTableName</name>
            <value>SQL SELECT 1 FROM SYS.SYSTABLES</value>
        </property>        
    </data-source>
    
    <data-source>
        <name>java:module/ExampleDS</name>
        <class-name>org.apache.derby.jdbc.ClientXADataSource</class-name>
        <server-name>localhost</server-name>
        <port-number>1527</port-number>
        <database-name>exampleDB</database-name>
        <user>app</user>
        <password>app</password>
        <property>
            <name>create</name>
            <value>true</value>
        </property>
        <property>
            <name>weblogic.TestTableName</name>
            <value>SQL SELECT 1 FROM SYS.SYSTABLES</value>
        </property>
    </data-source>    
    
    
    <jms-destination>
        <name>java:app/jms/CargoHandledQueue</name>
        <interface-name>javax.jms.Queue</interface-name>
        <destination-name>CargoHandledQueue</destination-name>
    </jms-destination>
    <jms-destination>
        <name>java:app/jms/MisdirectedCargoQueue</name>
        <interface-name>javax.jms.Queue</interface-name>
        <destination-name>MisdirectedCargoQueue</destination-name>
    </jms-destination>
    <jms-destination>
        <name>java:app/jms/DeliveredCargoQueue</name>
        <interface-name>javax.jms.Queue</interface-name>
        <destination-name>DeliveredCargoQueue</destination-name>
    </jms-destination>
    <jms-destination>
        <name>java:app/jms/RejectedRegistrationAttemptsQueue</name>
        <interface-name>javax.jms.Queue</interface-name>
        <destination-name>RejectedRegistrationAttemptsQueue</destination-name>
    </jms-destination>
    <jms-destination>
        <name>java:app/jms/HandlingEventRegistrationAttemptQueue</name>
        <interface-name>javax.jms.Queue</interface-name>
        <destination-name>HandlingEventRegistrationAttemptQueue</destination-name>
    </jms-destination>
</web-app>